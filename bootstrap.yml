---
- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    ssh_key_name: "{{ lookup('env', 'USER') }}"
    ssh_key_path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa.pub"
    do_client_id: "{{ lookup('env', 'DO_CLIENT_ID') }}"
    do_api_key: "{{ lookup('env', 'DO_API_KEY') }}"
  vars_files:
    - digital_ocean_vars.yml

  tasks:
    - digital_ocean: >
        state=present
        command=ssh
        name="{{ ssh_key_name }}"
        ssh_pub_key="{{ lookup('file', ssh_key_path) }}"
        client_id="{{ do_client_id }}"
        api_key="{{ do_api_key }}"
      register: do

    - digital_ocean: >
        state=present
        unique_name=yes
        name="{{ item }}"
        ssh_key_ids="{{ do.ssh_key.id }}"
        client_id="{{ do_client_id }}"
        api_key="{{ do_api_key }}"
        size_id="{{ vars[hostvars[item].size] }}"
        region_id="{{ vars[hostvars[item].region] }}"
        image_id="{{ vars[hostvars[item].image] }}"
      with_items: groups.droplets
      register: do

    - add_host: >
        name="{{ item.droplet.ip_address }}"
        groups=unnamed_droplets
      with_items: do.results

- hosts: unnamed_droplets
  remote_user: root
  tasks:
    - debug: msg="fqdn == {{ ansible_fqdn }}"
    - debug: msg="hostname == {{ ansible_hostname }}"
    - debug: msg="ip_address == {{ ansible_default_ipv4.address }}"
